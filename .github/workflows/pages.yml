name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install pdf.js
        run: |
          echo "Node version:" && node -v
          echo "Using existing package.json:" && cat package.json
          npm install --no-audit --no-fund
          # Postinstall should have created pdfjs/; force-create & copy if missing
          if [ ! -d pdfjs ]; then mkdir -p pdfjs; fi
          if [ ! -f pdfjs/pdf.mjs ]; then
            echo "Manual copy fallback for pdfjs-dist assets";
            cp node_modules/pdfjs-dist/build/pdf.mjs pdfjs/ 2>/dev/null || true
            cp node_modules/pdfjs-dist/build/pdf.worker.mjs pdfjs/ 2>/dev/null || true
            cp node_modules/pdfjs-dist/build/pdf.js pdfjs/ 2>/dev/null || true
            cp node_modules/pdfjs-dist/build/pdf.worker.js pdfjs/ 2>/dev/null || true
            cp node_modules/pdfjs-dist/build/pdf.min.js pdfjs/ 2>/dev/null || true
            cp node_modules/pdfjs-dist/build/pdf.worker.min.js pdfjs/ 2>/dev/null || true
          fi
          echo "Listing pdfjs directory:"; ls -l pdfjs || true
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
